# 解释器：将程序翻译成二进制
# 确认python配置环境：cmd终端输入python ，在终端退出python环境使用exit()命令
# 快捷键：ctrl+alt+s--进入设置页面；ctrl+d--复制当前代码；ctrl+alt+上下--将当前行代码上下移动；
#         ctrl+shfit+F10--运行当前代码文件；shfit+f6--重命名文件；ctrl+a--全选；ctrl+f--搜索
#         ctrl+shfit+alt+鼠标左键拖动多行--集体修改多行；ctrl+p可以弹出方法参数;ctrl+alt+空格--快速导包
# 字面量：写在python代码中的固定值（常量）

"""
数据类型
数据类型：数字（整数int、浮点数float、复数complex、布尔bool）、字符串str、列表list、元组tuple、集合set、字典dictionary
查看数据类型：type(变量名)
数据类型转换：str(变量名)--所有数据类型都可以转换成字符串；int()、folat()可以互相转换，只能转换数据内容的字符串，float转int会丢失精度
None使用场景：函数没有返回值时返回的是None；可以搭配if使用（if not None:）；定义变量后不想给初始值时可以先用None占位
pass使用场景：不知道语法怎么写可以暂时用pass代替避免报错；使用pass补足语法（某语法下不需要语句，可以用pass描述）
"""

"""
标识符
标识符是编程时用的一系列名字，用于给变量、类、方法命名
标识符命名规则：只允许英文、中文、数字、下划线，不推荐中文，数字不可以在开头，区分大小写，不可以使用关键字
变量命名规范：见名知意；下划线命名法（多个单词用下划线分隔）；英文字母全小写
转义字符：\，制表符（可以使内容对齐）：\t
"""

"""
运算符
算术运算符：加+、减-、乘*、除/、取整数//、取余%、指数**
复合运算符：+=、-=、*=、/=、//=、%=、**=
比较运算符：==、!=、<、>、<=、>=
"""

"""
字符串
字符串拼接：使用+  eg：print("字符串1" + "字符串2" + 变量名)   ps:变量存储数据类型是数字时会报错，不可以拼接
字符串格式化——占位拼接：使用%s/%d/%f eg：print("字符串%s，字符串%s" %(string1, string2);
                       精度控制：%5d(11-->   11);%5.2f(1.3--> 1.30);%.2f(3.129-->3.13)
字符串格式化——快速拼接：print(f"字符串{string1}, 字符串2{string2}")  ps：不需要关注类型和精度
"""

"""
条件语句格式（条件、条件2互斥）
if 条件1:
    执行1
elif 条件2:
    执行2
else:
    执行3
    
条件语句嵌套
if f:（f为None时，是false，f不为None时是true）
"""

"""
while循环语句
while 条件1:
    执行1
    执行2
while循环语句嵌套

for循环语句
for 变量 in 字符串:
    执行1
for循环中临时变量作用域：在规范上说，临时变量值作用在for函数中，但是在跳出for循环后仍然可以访问临时变量，
                        如果想要访问可以在for循环前定义变量
for循环语句嵌套

continue：跳过本次循环，执行下一次循环
break：退出循环，循环结束
"""



